name: Continuous Integration

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    env: # Definição das variáveis de ambiente
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: laravel
      DB_USERNAME: root
      DB_PASSWORD: root

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configurar permissões para Composer e Artisan
        run: |
          USER_UID=$(python -c 'import os; uid = 1001; while os.getpwuid(uid).pw_uid != uid: uid += 1; print(uid)')
          USER_NAME=novo_usuario_$USER_UID
          echo "USER_NAME=$USER_NAME" >> $GITHUB_ENV
          
          sudo useradd -G www-data,root -u $USER_UID -d /home/$USER_NAME $USER_NAME
          sudo mkdir -p /home/$USER_NAME/.composer
          sudo chown -R $USER_NAME:$USER_NAME /home/$USER_NAME
        shell: bash

      - name: Build and start containers
        run: sudo -u $USER_NAME docker-compose up -d
        working-directory: ./backend

      - name: Alterar permissões do arquivo composer.lock
        run: |
          sudo chown $user:novo_usuario ./backend/composer.lock
        working-directory: ./backend

      - name: Run Composer Install
        run: sudo -u novo_usuario docker-compose exec -T app composer update
        working-directory: ./backend

      - name: Run Migrations
        run: sudo -u novo_usuario docker-compose exec -T app php artisan migrate
        working-directory: ./backend

      - name: Run Tests
        run: sudo -u novo_usuario docker-compose exec -T app ./vendor/bin/phpunit
        working-directory: ./backend

      - name: Stop containers
        run: docker-compose down
        working-directory: ./backend  # Diretório do docker-compose.yml
